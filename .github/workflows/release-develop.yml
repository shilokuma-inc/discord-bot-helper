name: NinjacordApp

on:
  push:
    branches: develop

jobs:          
  build:
    name: Release | develop
    runs-on: macos-latest

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: ci_post_clone
        run: |
          brew install swiftlint
          defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidatation -bool YES
          defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Archive Project
        run: |                        
          xcodebuild archive -project discord-bot-helper.xcodeproj \
                             -scheme discord-bot-helper \
                             -sdk iphoneos \
                             -configuration Release \
                             -archivePath NinjacordApp.xcarchive \
                             CODE_SIGNING_ALLOWED=NO

      - name: Create ExportOptions.plist
        run: |
          echo '${{ secrets.EXPORT_OPTIONS }}' > ExportOptions.plist

      - name: Create Private Key
        run: |
          mkdir private_keys
          echo -n '${{ secrets.APPLE_API_KEY_BASE64 }}' | base64 --decode > ./private_keys/AuthKey_${{ secrets.APPLE_API_ISSUER_ID }}.p8

      - name: Export IPA
        run: |   
          xcodebuild -exportArchive \
                     -archivePath NinjacordApp.xcarchive \
                     -exportOptionsPlist ExportOptions.plist \
                     -exportPath app.ipa \
                     -allowProvisioningUpdates \
                     -authenticationKeyPath `pwd`/private_keys/AuthKey_${{ secrets.APPLE_API_ISSUER_ID }}.p8 \
                     -authenticationKeyID ${{ secrets.APPLE_API_KEY_ID }} \
                     -authenticationKeyIssuerID ${{ secrets.APPLE_API_ISSUER_ID }}

      - name: Upload IPA to App Store Connect
        run: |
          xcrun altool --upload-app -f app.ipa/NinjacordApp.ipa \
                       -u ${{ secrets.APPLE_ID }} \
                       -p ${{ secrets.APP_SPECIFIC_PASSWORD }} \
                       --type ios